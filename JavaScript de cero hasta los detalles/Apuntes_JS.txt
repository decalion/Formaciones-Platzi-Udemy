-Cualquier objeto de JavaScript se almacena en el objeto global window.
-JavaScript es case sensitive.
-Es un lenguaje interpretado.
-JavaScripr no es Asincrono(MultiHilo) , tiene una pila de ejecucion donde estan todas las funciones esperando a ejecutarse.
-En java las Variables son de 2 tipos : Tipos Primitivos y Objetos
-Hay 5 tipos primitivos : numeros,String,boolean ,undefined y null
-Un objeto puede ser una coleccion de tipos de datos primitivos o otros objetos
-Las variables primitivas siempre se pasan por valor. Tienen un espacio de memoria diferente.
-Los Objetos se pasan por referencia. Ocupan la misma posicion de memoria
-La notacion de punto es lo que nos permite obtener los valores de un objeto.
-En JS todas las funciones devuelven algo
-Una funcion puede Retornar, Primitivos, Objetos, Undefined o otra funcion
-Para hacer referencia a una propieda del objeto estando dentro del objeto hay que utilizar this.
-Si no utilizamos this estamos llamando al objeto global
-En js no existe el concepto de clase como en Java
-En JS no se pueden sobrecargar los metodos. Siempre se queda con el ultimo metodo.

Prototype:
-Con los prototipos podemos a√±adir mas atributos o metodos a nuestros objetos.
-El objetivo de los prototipos es hacer mas eficiente el uso de los objetos.
-Al crear una funcion con un prototipo hacemos que este solo 1 vez en memoria. 
-En cambio si definimos la funcion en el objeto se guarda en memoria por cada objeto que creamos.

Funciones Anonimas:
-Cualquier variable de tipo var que declaremos se define en el objeto global
-Al estar definida en el objeto global podemos moficar el valor desde cualquier lugar.
-Con las funciones anonimas evitamos moficar los objetos globales
-Una funcion anonima es una funcion que no tiene nombre



----------------------
undefined y null son objetos diferentes a un que los 2 son objetos vacios.
Si comparamos con el triple = da false ya que son objetos diferentes.
En cambio con el doble = devuelve true ya que los 2 estan vacios.
undefined  === null
false

undefined  == null
true

---------------------------------------
Errores.
-Al buscar las propiedas de un objeto si no existe devuelve undefined
-Si intentas llamar a una variable que no existe devuelve ReferenError